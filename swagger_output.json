{
  "swagger": "2.0",
  "info": {
    "title": "Customer Transaction API Documentation",
    "description": "A simple CRUD web services for managing customers' accounts and transactions",
    "version": "1.0.0"
  },
  "host": "cse341-w03-project.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "parameters": {
    "PageParam": {
      "name": "page",
      "in": "query",
      "description": "Page number for pagination",
      "required": false,
      "type": "integer",
      "default": 1
    },
    "LimitParam": {
      "name": "limit",
      "in": "query",
      "description": "Number of results per page",
      "required": false,
      "type": "integer",
      "default": 10
    }
  },
  "definitions": {
    "Transaction": {
      "type": "object",
      "required": [
        "date",
        "amount",
        "transaction_code",
        "symbol",
        "price",
        "total"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "example": "1969-02-04T00:00:00.000+00:00"
        },
        "amount": {
          "type": "integer",
          "example": 1000
        },
        "transaction_code": {
          "type": "string",
          "enum": ["buy", "sell"],
          "example": "buy"
        },
        "symbol": {
          "type": "string",
          "example": "aapl"
        },
        "price": {
          "type": "number",
          "format": "float",
          "example": 100.0
        },
        "total": {
          "type": "number",
          "format": "float",
          "example": 100000.0
        }
      },
      "TransactionList": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Transaction"
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "description": "The API to the root or HomePage",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "description": "API Documentation",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/transactions/": {
      "get": {
        "description": "GET ALL transactions API with Pagination",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/LimitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Current page number",
                  "example": 1
                },
                "limit": {
                  "type": "integer",
                  "description": "Number of results per page",
                  "example": 10
                },
                "total": {
                  "type": "integer",
                  "description": "Total number of transactions",
                  "example": 50
                },
                "totalPages": {
                  "type": "integer",
                  "description": "Total number of pages",
                  "example": 5
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "description": "List of transactions"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "POST or CREATE a transaction API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "account_id",
                "transaction_count",
                "bucket_start_date",
                "bucket_end_date",
                "transactions"
              ],
              "properties": {
                "account_id": {
                  "type": "integer",
                  "description": "The account ID",
                  "example": 898989
                },
                "transaction_count": {
                  "type": "integer",
                  "description": "The number of transactions",
                  "example": 1
                },
                "bucket_start_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The start date of the bucket",
                  "example": "1969-02-04T00:00:00.000+00:00"
                },
                "bucket_end_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The end date of the bucket",
                  "example": "1997-02-04T00:00:00.000+00:00"
                },
                "transactions": {
                  "type": "array",
                  "minItems": 1,
                  "description": "List of the transactions",
                  "items": {
                    "type": "object",
                    "required": [
                      "date",
                      "amount",
                      "transaction_code",
                      "symbol",
                      "price",
                      "total"
                    ],
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1969-02-04T00:00:00.000+00:00"
                      },
                      "amount": {
                        "type": "integer",
                        "example": 1000
                      },
                      "transaction_code": {
                        "type": "string",
                        "enum": ["buy", "sell"],
                        "example": "buy"
                      },
                      "symbol": {
                        "type": "string",
                        "example": "aapl"
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "example": 100.0
                      },
                      "total": {
                        "type": "number",
                        "format": "float",
                        "example": 100000.0
                      }
                    }
                  },
                  "example": [
                    {
                      "date": "1969-02-04T00:00:00.000+00:00",
                      "amount": 1000,
                      "transaction_code": "buy",
                      "symbol": "aapl",
                      "price": 100.0,
                      "total": 100000.0
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "description": "GET a transaction API",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "PUT or UPDATE a transaction API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "integer",
                  "description": "The account ID",
                  "example": 898989
                },
                "transaction_count": {
                  "type": "integer",
                  "description": "The number of transactions",
                  "example": 1
                },
                "bucket_start_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The start date of the bucket",
                  "example": "1969-02-04T00:00:00.000+00:00"
                },
                "bucket_end_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The end date of the bucket",
                  "example": "1997-02-04T00:00:00.000+00:00"
                },
                "transactions": {
                  "type": "array",
                  "minItems": 1,
                  "description": "List of the transactions",
                  "items": {
                    "type": "object",
                    "required": [
                      "date",
                      "amount",
                      "transaction_code",
                      "symbol",
                      "price",
                      "total"
                    ],
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1969-02-04T00:00:00.000+00:00"
                      },
                      "amount": {
                        "type": "integer",
                        "example": 1000
                      },
                      "transaction_code": {
                        "type": "string",
                        "enum": ["buy", "sell"],
                        "example": "buy"
                      },
                      "symbol": {
                        "type": "string",
                        "example": "aapl"
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "example": 100.0
                      },
                      "total": {
                        "type": "number",
                        "format": "float",
                        "example": 100000.0
                      }
                    }
                  },
                  "example": [
                    {
                      "date": "1969-02-04T00:00:00.000+00:00",
                      "amount": 1000,
                      "transaction_code": "buy",
                      "symbol": "aapl",
                      "price": 100.0,
                      "total": 100000.0
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "DELETE a transaction API",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/states/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "isoCode",
                "name"
              ],
              "properties": {
                "isoCode": {
                  "type": "string",
                  "description": "The ISO code of the state",
                  "example": "CA"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the state",
                  "example": "Canada"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/states/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "PUT or UPDATE a state API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "isoCode": {
                  "type": "string",
                  "description": "The ISO code of the state",
                  "example": "CA"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the state",
                  "example": "Canada"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/accounts/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "account_id": {
                  "example": "any"
                },
                "limit": {
                  "example": "any"
                },
                "products": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customers/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "birthdate": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "accounts": {
                  "example": "any"
                },
                "tier_and_details": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}